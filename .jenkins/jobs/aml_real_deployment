@Library('shared-library') _
pipeline {
    agent any
    
    parameters {
        string(name: 'env_name', defaultValue: "dev", description: 'env stage e.g. dev, test, prod')
        string(name: 'flow_type', defaultValue: 'named_entity_recognition', description: 'flow type to be registered and deployed')
        string(name: 'model_version', description: 'flow version in registry to be deployed')
        string(name: 'run_id', description: 'run id of the flow to be deployed')
        }

    // Install requirements and provision AML Managed Online Endpoint
    stages {
        stage('Provision AML Online Endpoint') {
            steps {
                installRequirements('execute_job_requirements')
                withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
                    withPythonEnv('/usr/bin/python3.9') {
                        sh """               
                        python -m llmops.common.deployment.provision_endpoint \
                            --subscription_id $AZURE_SUBSCRIPTION_ID \
                            --build_id $run_id \
                            --output_file "endpoint_principal.txt" \
                            --env_name $env_name \
                            --flow_to_execute $flow_type
                        """
                    }
                }
            }
        }
        
        // Assign Azure resource permissions to endpoint principal
        stage('Assign Azure resource permissions') {
            steps {
                azureLogin()
                withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
                    sh '''
                    endpoint_principal=$(cat endpoint_principal.txt)
                    echo $endpoint_principal
                    file_path="./$flow_type/llmops_config.json"
                    echo $file_path
                    env_type="$env_name"

                    selected_object=\$(jq ".envs[] | select(.ENV_NAME == \"$env_type\")" "\$file_path")
                    echo $selected_object

                    key_vault_name=$(echo "$selected_object" | jq -r ".KEYVAULT_NAME")
                    resource_group_name=$(echo "$selected_object" | jq -r ".RESOURCE_GROUP_NAME")
                    workspace_name=$(echo "$selected_object" | jq -r ".WORKSPACE_NAME")

                    az role assignment create --assignee $endpoint_principal --role "AzureML Data Scientist" --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID/resourcegroups/$resource_group_name/providers/Microsoft.MachineLearningServices/workspaces/$workspace_name"
                    
                    auth_type=$(az keyvault show -n $key_vault_name  -g $resource_group_name --query "properties.enableRbacAuthorization")
                    if [[ -z "$auth_type" ]]; then
                        echo "assigning RBAC permission"
                        az role assignment create --assignee $endpoint_principal --role "Key Vault Reader" --scope "/subscriptions/$AZURE_SUBSCRIPTION_ID/resourcegroups/$resource_group_name/providers/Microsoft.KeyVault/vaults/$key_vault_name"
                    else
                        echo "assigning policy permission"
                        az keyvault set-policy --name $key_vault_name --resource-group $resource_group_name --object-id $endpoint_principal --secret-permissions get list
                    fi
                    '''
                }
            }
        }

        // Provision AML Online Deployment for given model version and run id
        stage('Provision AML Online Deployment') {
            steps {
                withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
                    withPythonEnv('/usr/bin/python3.9') {
                        sh """
                        python -m llmops.common.deployment.provision_deployment \
                            --subscription_id $AZURE_SUBSCRIPTION_ID \
                            --model_version $model_version \
                            --build_id $run_id \
                            --env_name $env_name \
                            --flow_to_execute $flow_type
                        """
                    }
                }
            }
        }

        // Test Online AML Deployment
        stage('Test AML Deployment') {
            steps {
                withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
                    withPythonEnv('/usr/bin/python3.9') {
                        sh """
                        python -m llmops.common.deployment.test_model_on_aml \
                            --subscription_id $AZURE_SUBSCRIPTION_ID \
                            --env_name $env_name \
                            --flow_to_execute $flow_type
                        """
                    }
                }
            }
        }
    }
}